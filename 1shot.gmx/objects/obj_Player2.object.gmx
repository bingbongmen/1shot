<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Player2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//basic player var inits
var haxis = 0;
var vaxis = 0;
var hpoint = 0;
var vpoint = 0;
var hspd = 0;
var vspd = 0;

//Points player to enemy (doesn't work)
image_angle = point_direction(0,0,obj_Player1.x,obj_Player1.y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//controller stick vars
haxis = gamepad_axis_value(1, gp_axislh);
vaxis = gamepad_axis_value(1, gp_axislv);
hpoint = gamepad_axis_value(1, gp_axisrh);
vpoint = gamepad_axis_value(1, gp_axisrv);
hpointSave = 0;
vpointSave = 0;

//player speed set from stick vars
hspd = haxis*2.0;
vspd = vaxis*2.0;

//Wall CC
if(place_meeting(x+hspd, y, obj_Wall)){
    var i=0;  
    while(!place_meeting(x+sign(hspd), y, obj_Wall)&amp;&amp;(i&lt;abs(hspd))){
        x += sign(hspd);
        i++;
    }
    hspd = 0;
}

x += hspd;

if(place_meeting(x, y+vspd, obj_Wall)){
    var i=0;
    while(!place_meeting(x, y+sign(vspd), obj_Wall)&amp;&amp;(i&lt;abs(vspd))){
        y+= sign(vspd);
        i++;
    }
    vspd = 0;
}

y += vspd;


//Player shoot
if((gamepad_button_check_pressed(1, gp_shoulderrb)) || (gamepad_button_check_pressed(1, gp_shoulderlb))){
    if(player2Shot &gt; 0){
        instance_create(obj_Player2.x,obj_Player2.y,obj_p2Bullet);
        player2Shot--;
    }
}

//Image rotation keeping

if(hpoint !=0){
    hpointSave = hpoint;
}
if(hpoint=0){
    hpoint = hpointSave;
}
if(vpoint !=0){
    vpointSave = vpoint;
}
if(vpoint=0){
    vpoint = vpointSave;
}
if(hpoint!=0 || vpoint!=0){
image_angle = point_direction(0, 0, hpoint, vpoint);
}

//Saves P2s point direct
global.p2Point = image_angle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
